<?php

/**
 * @file
 * Install, update, and uninstall functions for the message notify module.
 */

/**
 * Implements hook_uninstall().
 */
function message_notify_uninstall() {
  $instance = field_info_instance('message_type', 'message_text_subject', 'message_type_email');
  field_delete_instance($instance);
  field_delete_field('message_text_subject');
}

/**
 * Mark message-text field as renderable using getText().
 */
function message_notify_update_7000() {
  $field = field_info_field('message_text_subject');
  $field['settings']['message_text'] = TRUE;
  field_update_field($field);
}

/**
 * Explain about using View-modes.
 */
function message_notify_update_7001() {
  return t('Message notify now works with view modes - assign the fields that should be renderd in the "Manage display" of each message-type.');
}

/**
 * Mark message-text field as renderable using getText().
 */
function message_notify_update_7002() {
  $field = field_info_field('message_text_subject');
  $field['settings']['message_text'] = TRUE;
  field_update_field($field);
}

/**
 * Remove the deprecated "Subject" field.
 */
function message_notify_update_7003(&$sandbox) {
  $field = field_info_field('message_text_subject');
  if ($field['storage']['type'] !== 'field_sql_storage') {
    // Field doesn't use SQL storage, we cannot modify the schema.
    return;
  }

  $table_name = _field_sql_storage_tablename($field);
  $query = db_select($table_name, $table_name);
  $result = $query
    ->fields($table_name)
    ->execute()
    ->fetchAll();

  dpm($result);

  if ($result) {
    // Get the message-text field tables.
    $message_field = field_info_field('messaeg_text');
    $message_table_name = _field_sql_storage_tablename($message_field);
    $message_revision_name = _field_sql_storage_revision_tablename($message_field);

    $entity_ids = array();
    foreach ($result as $row) {
      $entity_ids[] = $row->entity_id;
    }

    // Increment the existing deltas, so we can place the value form the
    // old field as delta 0.
    db_update($table)
      ->condition('entity_type', 'message_type')
      ->condition('bundle', 'message_type_email')
      ->condition('entity_id', $entity_ids, 'IN')
      ->orderBy('delta', 'DESC')
      ->expression('delta = delta + 1')
      ->execute();

    foreach ($result as $row) {
      // Move the subject field values into the message-text field, as the
      // first delta.
      drupal_write_record($message_table_name, $row);
      drupal_write_record($message_revision_name, $row);
    }
  }

  // Change the message-type bundle.
  db_update('message_type')
    ->condition('category', 'message_type_email')
    ->fields(array('category' => 'message_type'))
    ->execute();

  // Delete the subject field.
  $instance = field_info_instance('message_type', 'message_text_subject', 'message_type_email');
  field_delete_instance($instance);
}
